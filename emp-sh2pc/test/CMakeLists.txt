#Testing macro
macro (add_test_executable_with_lib _name libs)
	add_executable(test_${_name} "${_name}.cpp")
	target_link_libraries(test_${_name} ${EMP-OT_LIBRARIES})
endmacro()

macro (add_test_case _name)
	add_test_executable_with_lib(${_name} "")
  	add_test(NAME ${_name} COMMAND "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test_${_name}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/")
endmacro()

macro (add_test_case_with_run _name)
	add_test_executable_with_lib(${_name} "")
	add_test(NAME ${_name} COMMAND "./run" "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/test_${_name}" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/")

endmacro()

# Test cases
add_test_case_with_run(bit)
add_test_case_with_run(int)
IF(${ENABLE_FLOAT})
add_test_case_with_run(float)
ENDIF(${ENABLE_FLOAT})
add_test_case_with_run(circuit_file)
add_test_case_with_run(example)
add_test_case_with_run(repeat)
add_test_case_with_run(sha256_with_state)
add_test_case_with_run(sha-256)
add_test_case_with_run(sha256_padded)
add_test_case_with_run(sha256_i_2_share_msg_1_state_o_hash_state)
add_test_case_with_run(sha256_i_2_share_msg_2_mask_1_state_o_2_share)
add_test_case_with_run(innerproduct)
add_test_case_with_run(sha256_input_two_state)
add_test_case_with_run(sha256_input_two_state_trunc)
add_test_case_with_run(sha256_input_two_state_trunc_320)
add_test_case_with_run(sha256_input_two_state_trunc_96)
add_test_case_with_run(sha256_input_two_state_trunc_wo_hash)
add_test_case_with_run(xor)
add_test_case_with_run(condition)
add_test_case_with_run(GFMult128)
add_test_case_with_run(predicate_ghash)
add_test_case_with_run(dec_ghash)
add_test_case_with_run(input_test)
add_test_case_with_run(MtA_1)
add_test_case_with_run(hex2Int)
add_test_case_with_run(add2xor)
add_test_case_with_run(enc_ghash)
add_test_case_with_run(predicate_enc_ghash)
add_test_case_with_run(aes)
add_test_case_with_run(aes_gcm)
add_test_case_with_run(aes_gcm_dec)
add_test_case_with_run(predicate_aes_gcm)
add_test_case_with_run(relu)
